import { describe, it, expect, vi, beforeEach } from 'vitest';
import { createSkitStore } from './skitStore';
import { act } from '@testing-library/react';

vi.mock('../utils/fileSystem', () => ({
  saveSkitToFile: vi.fn(),
}));

describe('skitStore', () => {
  let store: ReturnType<typeof createSkitStore>;
  
  beforeEach(() => {
    store = createSkitStore();
    
    act(() => {
      store.getState().resetStore();
    });
  });
  
  it('should load skits', () => {
    const testSkits = {
      'test-skit': {
        meta: {
          title: 'Test Skit',
          version: 1,
          created: '2025-05-10T12:00:00+09:00',
          modified: '2025-05-10T12:34:56+09:00',
        },
        commands: [
          {
            id: 1,
            type: 'text',
            character: 'キャラA',
            body: 'こんにちは',
          },
        ],
      },
    };
    
    act(() => {
      store.getState().loadSkits(testSkits);
    });
    
    expect(store.getState().skits).toEqual(testSkits);
  });
  
  it('should select a skit', () => {
    const testSkits = {
      'test-skit': {
        meta: {
          title: 'Test Skit',
          version: 1,
          created: '2025-05-10T12:00:00+09:00',
          modified: '2025-05-10T12:34:56+09:00',
        },
        commands: [],
      },
    };
    
    act(() => {
      store.getState().loadSkits(testSkits);
      store.getState().selectSkit('test-skit');
    });
    
    expect(store.getState().currentSkitId).toBe('test-skit');
  });
  
  it('should add a command', () => {
    const testSkits = {
      'test-skit': {
        meta: {
          title: 'Test Skit',
          version: 1,
          created: '2025-05-10T12:00:00+09:00',
          modified: '2025-05-10T12:34:56+09:00',
        },
        commands: [],
      },
    };
    
    act(() => {
      store.getState().loadSkits(testSkits);
      store.getState().selectSkit('test-skit');
      store.getState().addCommand({ type: 'text', character: 'キャラA', body: 'こんにちは' });
    });
    
    const commands = store.getState().skits['test-skit'].commands;
    expect(commands.length).toBe(1);
    expect(commands[0].type).toBe('text');
    expect(commands[0].character).toBe('キャラA');
    expect(commands[0].body).toBe('こんにちは');
  });
  
  it('should remove a command', () => {
    const testSkits = {
      'test-skit': {
        meta: {
          title: 'Test Skit',
          version: 1,
          created: '2025-05-10T12:00:00+09:00',
          modified: '2025-05-10T12:34:56+09:00',
        },
        commands: [
          {
            id: 1,
            type: 'text',
            character: 'キャラA',
            body: 'こんにちは',
          },
        ],
      },
    };
    
    act(() => {
      store.getState().loadSkits(testSkits);
      store.getState().selectSkit('test-skit');
      store.getState().removeCommand(1);
    });
    
    const commands = store.getState().skits['test-skit'].commands;
    expect(commands.length).toBe(0);
  });
});
